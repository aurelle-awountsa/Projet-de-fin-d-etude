{"version":3,"sources":["./src/app/features/components/reviews/reviews.component.ts","./src/app/features/components/reviews/reviews.component.html","./src/app/features/components/register/register.component.ts","./src/app/features/components/register/register.component.html","./src/app/features/components/appointment/appointment.component.ts","./src/app/features/components/appointment/appointment.component.html","./src/app/features/components/register/verify-email/verify-email.component.ts","./src/app/features/components/register/verify-email/verify-email.component.html","./src/app/features/components/profile/profile.component.ts","./src/app/features/components/profile/profile.component.html","./src/app/features/components/login/login.component.ts","./src/app/features/components/login/login.component.html","./src/app/features/features.module.ts","./src/app/features/components/questions/results/results.component.ts","./src/app/features/components/questions/results/results.component.html","./src/app/features/components/questions/questions.component.ts","./src/app/features/components/questions/questions.component.html"],"names":[],"mappings":"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","file":"features-features-module-es2015.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"@app/core/services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {ReviewsService} from \"@app/core/services/reviews.service\";\nimport {ToastService} from \"@app/core/services/toast.service\";\n\n@Component({\n  selector: 'app-reviews',\n  templateUrl: './reviews.component.html',\n  styleUrls: ['./reviews.component.css']\n})\nexport class ReviewsComponent implements OnInit {\n\n  title: string;\n  currentRate: number;\n  reviewText: string;\n\n  readonly: boolean = true;\n  deleteId: any;\n  loggedInUser: any;\n\n  loggedInUserRole: any;\n  updateId: any;\n  date: any;\n\n  reviewAuthor: any;\n\n  totalItems: number;\n  page: number = 1;\n\n  alertMessage: string = \"\";\n\n  constructor(\n    public toastService: ToastService,\n    public authService: AuthService,\n    public reviews: ReviewsService\n  ) {\n  }\n\n  ngOnInit() {\n\n    this.loggedInUser = !(JSON.parse(localStorage.getItem('user'))) ?\n      \"\" : JSON.parse(localStorage.getItem('user')).username;\n\n    this.loggedInUserRole = !(localStorage.getItem('role')) ?\n      \"\" : localStorage.getItem('role');\n    this.showReviews();\n  }\n\n  showReviews() {\n    let tab: Array<any> = [];\n    this.reviews.getAllReviews()\n      .toPromise()\n      .then((data: any) => {\n\n        if (data.message) return this.reviews.rev;\n\n        this.reviews.userId = data._id;\n        data\n          .sort((a, b) => Date.parse(b.created) - Date.parse(a.created))\n          .forEach(x => {\n            x.rating = Number(x.rating);\n            x.imageNumber = Math.round(Math.random() * 14);\n\n            (new Date(x.updated).getTime() > new Date(x.created).getTime()) ?\n              x.date = `Updated ${x.updated}` :\n              x.date = `Created ${x.created}`;\n\n          });\n        this.reviews.rev = data;\n        this.totalItems = this.reviews.rev.length;\n\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  onReviewCreate() {\n    const review = {\n      \"rating\": this.currentRate,\n      \"reviewText\": this.reviewText\n    };\n\n    this.reviews.createReview(review)\n      .toPromise()\n      .then((data: any) => {\n        this.showReviews();\n        this.alertMessage = data.message;\n      })\n      .catch(err => {\n        this.alertMessage = \"Something went wrong !\";\n        console.log(err);\n      });\n\n  }\n\n  chooseModalTitle(event) {\n    this.updateId = event.id;\n    this.reviewAuthor = event.title;\n    (event.name === 'createReview') ? this.title = 'Create a new review'\n      : this.title = 'Update this review';\n  }\n\n  getDeleteId(event) {\n    this.reviewAuthor = event.id;\n    this.deleteId = event.title;\n  }\n\n  onDeleteReview() {\n    if (!localStorage.getItem('id_token')) {\n      this.alertMessage = \"Something went wrong !\";\n    } else {\n      this.reviews.deleteReview(this.reviewAuthor, this.deleteId)\n        .toPromise()\n        .then((data: any) => {\n          this.showReviews();\n          this.alertMessage = `${data.message}`;\n        })\n        .catch(err => {\n          this.alertMessage = \"Something went wrong !\";\n          console.log(err);\n        })\n    }\n  }\n\n  onUpdateReview() {\n\n    const review = {\n      \"rating\": this.currentRate,\n      \"reviewText\": this.reviewText\n    };\n\n    if (!localStorage.getItem('id_token')) {\n      this.alertMessage = \"Something went wrong !\";\n    } else {\n      this.reviews.updateReview(this.reviewAuthor, this.updateId, review)\n        .toPromise()\n        .then(() => {\n          this.showReviews();\n          this.alertMessage = \"Review updated successfully !\";\n        })\n        .catch(err => {\n          this.alertMessage = \"Something went wrong !\";\n          console.log(err);\n        });\n    }\n  }\n\n  choose() {\n    if (this.title === 'Create a new review') {\n      this.onReviewCreate();\n\n    } else if (this.title === 'Update this review') {\n      this.onUpdateReview();\n    }\n  }\n\n  closeAlert() {\n    this.alertMessage = \"\";\n  }\n\n  checkTokens() {\n    return !localStorage.getItem('id_token');\n  }\n\n}\n","<div *ngIf=\"reviews.rev\">\n\n  <div class=\"d-flex justify-content-center align-items-center\">\n    <div class=\"container m-5 p-5 border border-bottom\">\n\n      <!-- Add a review button -->\n      <div *ngIf=\"!checkTokens()\" class=\"row\">\n        <div class=\"col-md-12 text-center\">\n          <button (click)=\"chooseModalTitle($event.target)\" name=\"createReview\" type=\"submit\"\n                  class=\"btn btn-outline-success\n                  text-center text-monospace font-italic font-weight-bolder\"\n                  data-toggle=\"modal\" id=\"addReviewBtn\"\n                  data-target=\"#addReviewModel\" data-whatever=\"@mdo\">Add a review\n          </button>\n        </div>\n      </div>\n      <!-- Show all reviews section -->\n      <section>\n        <br>\n        <div id=\"comments\" class=\"text-center font-weight-bold\">\n          <span>{{(reviews.rev).length}}</span> {{ 'REVIEW.TITLE' | translate }}\n        </div>\n\n        <!-- Loop through all reviews and paginate -->\n        <ng-container *ngFor=\"let review of reviews.rev | paginate:\n                                                    { id: 'reviewsPagination',\n                                                        itemsPerPage: 4,\n                                                        currentPage: page,\n                                                        totalItems: totalItems };\n                                                        let i = index\">\n          <div class=\"media d-block d-md-flex mt-4\">\n\n            <!-- user image -->\n\n              <img *ngIf=\"i <= 19\" src=\"../../../../assets/img/{{review['author']}}.jpg\"\n                   class=\"card-img-64 d-flex mx-auto mb-3 rounded-circle\" style=\"width: 12%\" alt=\"\">\n\n              <img *ngIf=\"i > 19\" src=\"../../../../assets/img/no-profile.png\"\n                   class=\"card-img-64 d-flex mx-auto mb-3\" style=\"width: 10%\" alt=\"\">\n\n            <!-- user/review info -->\n            <div class=\"media-body text-center text-md-left ml-md-3 ml-0\">\n\n\n              <div id=\"test\" class=\"font-weight-bold my-0\">\n\n                <!-- review author -->\n                <div class=\"d-flex justify-content-between\">\n                  <div>\n                    {{review[\"author\"]}}\n                    <i class=\"fa fa-check-circle\" style=\"color: dodgerblue\"\n                    title=\"Verified Account\"></i>\n                  </div>\n\n                  <span *ngIf=\"review['author'] === loggedInUser || loggedInUserRole === 'admin'\n                      || loggedInUserRole === 'teacher'\">\n\n                    <!-- Select a title for update & create review modal -->\n                     <a *ngIf=\"!checkTokens()\"\n                       class=\"\" (click)=\"chooseModalTitle($event.target)\"\n                        data-toggle=\"modal\" data-target=\"#addReviewModel\"\n                        data-whatever=\"@mdo\">\n\n                      <!-- update review icon -->\n                       <i id=\"{{review['_id']}}\" name=\"updateReview\"\n                          title=\"{{review['author']}}\" class=\"fa fa-pencil\"\n                          aria-hidden=\"true\" onmousemove=\"this.style.cursor = 'pointer';\n                       this.style.fontSize= '1.5vh'\"\n                          onmouseout=\"this.style.fontSize= ''\" style=\"color: blue\"></i>\n                     </a>\n\n                    <!-- delete review a tag -->\n                    <a  *ngIf=\"!checkTokens()\"\n                      class=\"ml-3\" (click)=\"getDeleteId($event.target)\" data-toggle=\"modal\"\n                        data-target=\"#deleteModel\" data-whatever=\"@mdo\">\n\n                      <!-- delete review icon -->\n                      <i title=\"{{review['_id']}}\" id=\"{{review['author']}}\" class=\"fa fa-trash\"\n                         aria-hidden=\"true\" onmousemove=\"this.style.cursor = 'pointer';\n                       this.style.fontSize= '1.5vh'\" onmouseout=\"this.style.fontSize= ''\"\n                         style=\"color: red\" name=\"deleteReview\"></i>\n                    </a>\n                  </span>\n                </div>\n\n                <!-- Riview rating -->\n                {{ 'REVIEW.RATING' | translate }} :\n                <ngb-rating [(rate)]='review[\"rating\"]' [readonly]=\"readonly\"\n                            [max]=\"5\"></ngb-rating>\n              </div>\n\n              <!-- review date / time -->\n              <p class=\"blockquote-footer my-0\">\n               {{review[\"date\"] | slice:0:7}}\n                {{review[\"date\"] | date}}\n              </p>\n\n              <!-- review text -->\n              {{review[\"reviewText\"]}}\n            </div>\n          </div>\n          <hr>\n        </ng-container>\n      </section>\n\n      <!-- review pagination controls -->\n      <div class=\"pagination justify-content-center pagination-lg\">\n        <pagination-controls id=\"reviewsPagination\"\n                             (pageChange)=\"page = ($event)\"\n                             maxSize=\"{{totalItems}}\"\n                             directionLinks=\"true\"\n                             autoHide=\"true\"\n                             responsive=\"true\"\n                             previousLabel=\"Previous\"\n                             nextLabel=\"Next\"\n                             screenReaderPaginationLabel=\"Pagination\"\n                             screenReaderPageLabel=\"page\"\n                             screenReaderCurrentLabel=\"You're on page\">\n        </pagination-controls>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n\n<!-- Create/Update review modal -->\n<div class=\"modal fade\" id=\"addReviewModel\" tabindex=\"-1\" role=\"dialog\"\n     aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n\n      <!-- create/update review modal header -->\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title text-monospace font-italic font-weight-bolder\"\n            id=\"exampleModalLabel\">{{title}}</h5>\n\n        <!-- create/update review close modal button -->\n        <button (click)=\"closeAlert()\" type=\"button\" class=\"close\"\n                data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <!-- create/update review modal body -->\n      <div class=\"modal-body\">\n\n        <!-- create/update review form -->\n        <form #reviewForm=\"ngForm\" action=\"\" class=\"my-form\" (submit)=\"choose()\">\n\n          <!-- create/update review card -->\n          <div class=\"card\" style=\"width: 29rem;\">\n\n            <!-- create/update review card -->\n            <div class=\"card-header\">\n              <p class=\"font-weight-bold text-monospace font-italic\n              font-weight-bolder\">Rating :\n                <ngb-rating [(rate)]=\"currentRate\" [max]=\"5\"></ngb-rating>\n              </p>\n            </div>\n\n            <!-- create/update review rating input -->\n            <div class=\"list-group list-group-flush\">\n              <div class=\"list-group-item\">\n                <label for=\"inputRating\">\n                  <input #rateInput=\"ngModel\" [class.is-invalid]=\"rateInput.invalid &&\n                    rateInput.touched\" class=\"form-control\"\n                         [(ngModel)]=\"currentRate\" type=\"number\" id=\"inputRating\"\n                         name=\"currentRate\" style=\"width: 67px; height: 35px\" required>\n                </label>\n                out of 10\n                <p class=\"font-weight-bold text-monospace font-italic font-weight-bolder\">\n                  Rate: <b style=\"color: lightseagreen\"> {{currentRate}}</b>\n                </p>\n              </div>\n              <div class=\"list-group-item\">\n                <label class=\"font-weight-bold text-monospace font-italic\"\n                       for=\"reviewComment\">Your comment</label>\n\n                <!-- review textarea -->\n                <textarea #textArea=\"ngModel\"\n                          [class.is-invalid]=\"textArea.invalid && textArea.touched\"\n                          class=\"form-control w-100\" id=\"reviewComment\" rows=\"4\"\n                          [class.is-valid]=\"!(textArea.invalid && textArea.untouched)\"\n                          [(ngModel)]=\"reviewText\" name=\"reviewText\" required></textarea>\n                <small class=\"text-danger\" [class.d-none]=\"textArea.valid ||\n                textArea.untouched\">Review Text is required</small>\n              </div>\n            </div>\n          </div>\n          <br>\n          <!-- create/update review modal footer -->\n          <div class=\"modal-footer\">\n\n            <!-- update/create review success submit message -->\n            <span *ngIf=\"alertMessage.length > 1 && !(alertMessage.includes('wrong'))\"\n                  style=\"color: green; margin-right: 50px\" id=\"createSuccess\">\n              {{alertMessage}}\n            </span>\n\n            <!-- update/create review failed submit message -->\n            <span *ngIf=\"alertMessage.includes('wrong')\"\n                  style=\"color: red; margin-right: 90px\" id=\"createFail\">\n              {{alertMessage}}\n            </span>\n\n            <!-- update/create review close button -->\n            <button (click)=\"closeAlert()\" type=\"button\"\n                    class=\"btn btn-secondary text-monospace font-italic font-weight-bolder\"\n                    data-dismiss=\"modal\" id=\"modalClose\">Close\n            </button>\n\n            <!-- update/create review submit button -->\n            <button appAddClass id=\"reviewSubmit\" type=\"submit\"\n                    class=\"btn btn-primary text-monospace font-italic font-weight-bolder\"\n                    [disabled]=\"reviewForm.form.invalid\">submit\n            </button>\n          </div>\n        </form>\n\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<!-- delete review modal -->\n<div class=\"modal fade\" id=\"deleteModel\" tabindex=\"-1\" role=\"dialog\"\n     aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n\n      <!-- delete review modal header -->\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title text-monospace font-italic font-weight-bolder\" id=\"exampleModalLongTitle\">Confirm Delete</h5>\n\n        <!-- delete review close modal button -->\n        <button (click)=\"closeAlert()\" type=\"button\" class=\"close\"\n                data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <!-- delete review modal body -->\n      <div class=\"modal-body\">\n        <h5 class=\"modal-title text-monospace font-italic\" style=\"text-align: center\">\n          <strong>Are you sure?</strong></h5>\n        <br>\n        <p class=\"text-monospace font-italic\">You are about to delete this comment, this process is <strong>irreversible\n        </strong></p>\n        <p class=\"text-monospace font-italic\">Do you want to proceed ?</p>\n      </div>\n\n      <!-- delete review modal footer -->\n      <div class=\"modal-footer\">\n\n        <!-- delete review success submit message -->\n        <span *ngIf=\"alertMessage.length > 1 && !(alertMessage.includes('wrong'))\"\n              class=\"text-monospace font-italic\"\n              style=\"color: green; margin-right: 70px\" id=\"reviewdeleteAlert\"> {{alertMessage}}\n            </span>\n\n        <!-- delete review failed submit message -->\n        <span *ngIf=\"alertMessage.includes('wrong')\"\n              class=\"text-monospace font-italic\"\n              style=\"color: red; margin-right: 90px\"> {{alertMessage}}\n            </span>\n\n        <!-- delete review close button -->\n        <button (click)=\"closeAlert()\" type=\"button\" id=\"deleteClose\"\n                class=\"btn btn-secondary text-monospace font-italic font-weight-bolder\"\n                data-dismiss=\"modal\">Close\n        </button>\n\n        <!-- delete review submit button -->\n        <button appAddClass (click)=\"onDeleteReview()\" type=\"button\" id=\"deleteSubmit\"\n                class=\"btn btn-danger text-monospace font-italic font-weight-bolder\">Delete\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"!reviews.rev\">\n  <div class=\"sk-fading-circle\">\n    <div class=\"sk-circle1 sk-circle\"></div>\n    <div class=\"sk-circle2 sk-circle\"></div>\n    <div class=\"sk-circle3 sk-circle\"></div>\n    <div class=\"sk-circle4 sk-circle\"></div>\n    <div class=\"sk-circle5 sk-circle\"></div>\n    <div class=\"sk-circle6 sk-circle\"></div>\n    <div class=\"sk-circle7 sk-circle\"></div>\n    <div class=\"sk-circle8 sk-circle\"></div>\n    <div class=\"sk-circle9 sk-circle\"></div>\n    <div class=\"sk-circle10 sk-circle\"></div>\n    <div class=\"sk-circle11 sk-circle\"></div>\n    <div class=\"sk-circle12 sk-circle\"></div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ValidateService} from \"@app/core/services/validate.service\";\nimport {AuthService} from \"@app/core/services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {EToastSeverities, ToastService} from \"@app/core/services/toast.service\";\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  email: string;\n  password: string;\n  username: string;\n  confirmPassword : string;\n  emailPattern : string = \"/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\";\n\n  constructor(private validateService: ValidateService,\n              public toastService: ToastService,\n              private authService: AuthService,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      username: this.username,\n      email: this.email,\n      password: this.password\n    };\n\n    if (!this.validateService.validateRegister(user)) {\n      this.toastService.show(EToastSeverities.INFO, 'Please fill in all fields');\n      setTimeout(async () => await this.router.navigate(['/dashboard']), 1000);\n      return false;\n    }\n\n    // register\n    this.authService.registerUser(JSON.stringify(user))\n      .subscribe(\n        async (data: any) => {\n          this.toastService.show(EToastSeverities.INFO, `A verification email has been sent to ${data.user.userEmail}`);\n          setTimeout(async () => await this.router.navigate(['/login']), 1000);\n        },\n        err => {\n          console.error(err.error);\n          this.toastService.show(EToastSeverities.ERROR, 'Something went wrong');\n        });\n  }\n}\n","<p-toast></p-toast>\n<br>\n<div class=\"container register-form col-lg-7 col-md-8 col-sm-8 rounded\">\n\n  <div class=\"form rounded col-12\">\n\n    <div class=\"note bg-dark\">\n      <h3 id=\"formTitle\" class=\"font-weight-bolder mb-3\">{{ 'REGISTER.TITLE' | translate }}</h3>\n      <p class=\"font-weight-bold\">{{ 'REGISTER.TITLE' | translate }}</p>\n    </div>\n\n    <form #signUpForm=\"ngForm\"\n          class=\"form-content text-center col-md-12 rounded my-form\" (submit)=\"onRegisterSubmit()\">\n\n      <!-- Username -->\n      <div class=\"row justify-content-center col-12\">\n        <label for=\"username\">\n        </label>\n        <input #usernameInput=\"ngModel\"\n               [class.is-invalid]=\"usernameInput.invalid && usernameInput.touched\"\n               [class.is-valid]=\"!(usernameInput.invalid && usernameInput.untouched)\"\n               class=\"form-control\" type=\"text\" id=\"username\"\n               [(ngModel)]=\"username\" name=\"username\" minlength=\"4\" maxlength=\"9\"\n               placeholder=\"username\" required>\n        <div *ngIf=\"usernameInput.errors && (usernameInput.invalid ||\n                        usernameInput.touched)\">\n          <small id=\"usernameError1\" class=\"text-danger\" *ngIf=\"usernameInput.errors.minlength\">\n            {{usernameInput.value}} username minimum length is 4\n          </small>\n          <small id=\"usernameError2\" class=\"text-danger\"\n                 *ngIf=\"usernameInput.errors.required\n                      && usernameInput.touched\">A username is required</small>\n        </div>\n      </div>\n      <br>\n\n      <!-- email -->\n      <div class=\"row justify-content-center col-12\">\n        <label for=\"inputEmail\">\n        </label>\n        <input #emailInput=\"ngModel\"\n               pattern=\"^[aA-zZ0-9._%+-]+@[a-z0-9.-]+\\.[aA-zZ]{2,4}$\"\n               [class.is-invalid]=\"emailInput.invalid && emailInput.touched\"\n               [class.is-valid]=\"!(emailInput.invalid && emailInput.untouched)\"\n               class=\"form-control\" type=\"email\" id=\"inputEmail\"\n               [(ngModel)]=\"email\" name=\"email\"\n               placeholder=\"Email address\" required>\n        <div *ngIf=\"emailInput.errors && (emailInput.invalid ||\n                        emailInput.touched)\">\n          <small id=\"emailInvalid\" class=\"text-danger\" *ngIf=\"emailInput.errors.pattern\">\n            {{emailInput.value}} is not a valid email\n          </small>\n          <small id=\"emailRequired\" class=\"text-danger\" *ngIf=\"emailInput.errors.required\n                      && emailInput.touched\">An Email is required</small>\n        </div>\n      </div>\n      <br>\n\n      <!-- password -->\n      <div class=\"row justify-content-center col-12\">\n        <label for=\"inputPassword\"></label>\n        <input #passwordInput=\"ngModel\"\n               [class.is-invalid]=\"passwordInput.invalid && passwordInput.touched\"\n               [class.is-valid]=\"!(passwordInput.invalid && passwordInput.untouched)\"\n               class=\"form-control\" type=\"password\" id=\"inputPassword\"\n               [(ngModel)]=\"password\" name=\"password\"\n               placeholder=\"Password\" required>\n        <small id=\"passwordRequired\" class=\"text-danger\" [class.d-none]=\"passwordInput.valid ||\n          passwordInput.untouched\">A password is required</small>\n      </div>\n      <br>\n\n      <!-- confirm password -->\n      <div class=\"row justify-content-center col-12\">\n        <label for=\"PasswordConfirm\" class=\"col-form-label\"></label>\n        <input #inputConfirmPassword=\"ngModel\" pattern=\"{{passwordInput.value}}\"\n               [class.is-invalid]=\"inputConfirmPassword.invalid &&\n                   inputConfirmPassword.touched\"\n               [class.is-valid]=\"!(inputConfirmPassword.invalid &&\n                   inputConfirmPassword.untouched)\"\n               class=\"form-control\" type=\"password\" id=\"PasswordConfirm\"\n               [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\"\n               placeholder=\"Confirm password\" required>\n\n        <div *ngIf=\"inputConfirmPassword.errors && (inputConfirmPassword.invalid ||\n                        inputConfirmPassword.touched)\">\n          <small id=\"passwordMatchError\" class=\"text-danger\"\n                 *ngIf=\"inputConfirmPassword.errors.pattern\">Passwords do not match</small>\n          <small id=\"confirmPasswordError\" class=\"text-danger\" *ngIf=\"inputConfirmPassword.errors.required\n                      && inputConfirmPassword.touched\">Please confirm your password</small>\n        </div>\n      </div>\n      <small class=\"font-italic\">\n        <i class=\"fa fa-info-circle\" aria-hidden=\"true\" style=\"color: green\"></i>\n        {{ 'REGISTER.WARN' | translate }}\n      </small>\n\n      <!-- sign up buttton -->\n      <div class=\"d-flex\">\n        <div>\n          <button [disabled]=\"signUpForm.form.invalid\"\n                  class=\"btn btn-secondary btn-rounded\n                  text-monospace font-italic font-weight-bolder\" id=\"submitBtn\"\n                  type=\"submit\">{{ 'REGISTER.SIGNUP_BTN' | translate }}\n          </button>\n        </div>\n        <div class=\"ml-auto\">\n          <small class=\"\">\n            <a class=\"nav-link font-italic\"\n               style=\"text-decoration: underline; color: #343A40\"\n               [routerLink]=\"['/login']\">{{ 'REGISTER.LOGIN_URL' | translate }}</a>\n          </small>\n        </div>\n      </div>\n    </form>\n\n  </div>\n</div>\n\n\n<!-- Confirm Password\n\n\n<div class=\"row justify-content-center w-100 col-12 \">\n\n</div>\n\n-->\n","import {Component, OnInit} from '@angular/core';\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport {ConfirmationDialogComponent} from \"@app/shared/components/confirmation-dialog/confirmation-dialog.component\";\nimport {DialogService} from \"primeng/dynamicdialog\";\nimport {EToastSeverities, ToastService} from \"@app/core/services/toast.service\";\nimport {BookingService} from \"@app/core/services/booking.service\";\nimport {Router} from \"@angular/router\";\nimport {filter, switchMap, tap} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-appointment',\n  templateUrl: './appointment.component.html',\n  styleUrls: ['./appointment.component.css']\n})\nexport class AppointmentComponent implements OnInit {\n\n  events: any[] = [];\n\n  options: any;\n\n  constructor(private readonly dialogService: DialogService,\n              private router: Router,\n              public toastService: ToastService,\n              private bookingService: BookingService) {\n  }\n\n  ngOnInit(): void {\n\n    if (!Object.keys(localStorage).includes('id_token')) {\n      this.toastService.show(EToastSeverities.INFO, 'Redirected to login page !');\n      this.router.navigate(['/login'])\n    }\n\n    this.options = {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      defaultDate: new Date().toISOString(),\n      header: {\n        left: 'prev,next',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n      }\n    };\n\n    this.getBookings();\n  }\n\n  getClikedDate(fc: any): void {\n    let clickedTeacherBooking = '';\n    if ((fc as HTMLElement).tagName === 'SPAN') {\n      const target = fc as HTMLElement;\n      clickedTeacherBooking = target?.innerHTML.split('to')[1]?.split('(')[1]?.charAt(0);\n    } else if ((fc as HTMLElement).tagName === 'DIV') {\n      const target = fc as HTMLElement;\n      const target1 = target.innerHTML as unknown as HTMLElement;\n      clickedTeacherBooking = JSON.stringify(target1)?.split('to')[1]?.split('(')[1]?.charAt(0);\n    }\n\n    if (clickedTeacherBooking) {\n      this.openConfirmationDialog(clickedTeacherBooking);\n    }\n  }\n\n  getBookings() {\n    this.bookingService.getTeacherBookings()\n      .subscribe(\n        (data: any) => {\n          this.events = this.showEvents(data);\n        },\n        err => {\n          console.error(err.error);\n        });\n  }\n\n  openConfirmationDialog(bookingIndex): void {\n    const booking = this.events.find(u => u.id == bookingIndex);\n    const bookingTosave = {\n      start: booking.start,\n      end: booking.end,\n      bookingIndex: bookingIndex\n    };\n    console.log(bookingTosave)\n    const ref = this.dialogService.open(ConfirmationDialogComponent, {\n      header: 'Confirmation',\n      data: {\n        message: `book the teacher from ${booking.start.split('T')[1].substring(0, 5)} to  ${booking.end.split('T')[1].substring(0, 5)}`\n      }\n    });\n\n    ref.onClose\n      .pipe(\n        filter((confirm: boolean) => confirm),\n        switchMap(() => this.bookingService.addUserBooking(bookingTosave)),\n        switchMap(() => this.bookingService.getTeacherBookings()))\n      .subscribe(\n        (data: any) => {\n          this.events = this.showEvents(data);\n          this.toastService.show(EToastSeverities.SUCCESS, 'Successfully booked !');\n        },\n        error => {\n          if (error.error.message) {\n            this.toastService.show(EToastSeverities.INFO, `${error.error.message}`);\n          } else {\n            this.toastService.show(EToastSeverities.ERROR, 'Something went wrong !');\n          }\n        })\n\n  }\n\n  showEvents(data: any) {\n    const bookings = [];\n    data\n      .forEach((u, i) => {\n        const title = (u.state === 'FINISHED') ?\n          `to ${u.end.split('T')[1].substring(0, 5)}`\n          : `to ${u.end.split('T')[1].substring(0, 5)} (${i})`;\n        const color = (u.state === 'CANCELLED') ? '#6A5720' : (u.state === 'FINISHED') ? '#F02B1D' : ''\n        bookings.push({\n          id: i,\n          title: title,\n          start: u.start,\n          end: u.end,\n          color: color\n        });\n      });\n    return bookings;\n  }\n}\n\n/*\n    ref.onClose.subscribe((confirm: boolean) => {\n      if (confirm) {\n        this.events = this.events.filter(u => u.id != bookingIndex);\n        this.toastService.show(EToastSeverities.SUCCESS, 'successfully booked !');\n      }\n    });\n\n */\n","<p-toast></p-toast>\n\n<br>\n<div class=\"d-flex justify-content-center align-items-center\">\n  <h3 class=\"mb-4 font-weight-bold ml-5\">\n    Take an Appointment\n  </h3>\n</div>\n<div class=\"d-flex justify-content-center align-items-center\">\n  <div class=\"container m-5 p-5 border border-bottom\">\n\n    <p-fullCalendar (click)=\"getClikedDate($event.target)\" [events]=\"events\" [options]=\"options\"></p-fullCalendar>\n  </div>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\nimport {AuthService} from \"@app/core/services/auth.service\";\nimport {catchError} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.css']\n})\nexport class VerifyEmailComponent implements OnInit {\n\n  key: string = \"\";\n  message: string = \"\";\n  resendmessage: string = \"\";\n  resendEmail: string = \"\";\n  isVerified: boolean;\n\n  constructor(private route: ActivatedRoute,\n              private authService: AuthService) {\n  }\n\n  ngOnInit() {\n    this.key = this.route.snapshot.paramMap.get('key');\n  }\n\n  verifyEmail() {\n    this.authService.confirmEmail(this.key)\n      .toPromise()\n      .then((data: any) => {\n        this.isVerified = data.success;\n        this.message = data.message;\n      })\n      .catch(err => {\n        this.isVerified = err.error.success;\n        this.message = err.error.message;\n        console.log(err)\n      });\n  }\n\n  resend(){\n\n    this.authService.resendEmail(this.resendEmail)\n      .toPromise()\n      .then((data: any) => {\n        console.log(data);\n        this.resendmessage = data.message;\n      })\n      .catch(err => {\n        this.resendmessage = err.error.message;\n        console.log(err)\n      });\n\n  }\n\n}\n","<!-- Valid key alert -->\n\n<div *ngIf=\"isVerified\">\n  <div class=\"row justify-content-center\">\n    <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n      <strong>Success!</strong> {{message}}\n      <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  </div>\n</div>\n\n<!-- resend key alert -->\n<div *ngIf=\"resendmessage.length !== 0 && resendmessage.includes('resent')\">\n  <div class=\"row justify-content-center\">\n    <div class=\"alert alert-dismissible alert-primary\">\n      <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n      <strong>Sent!</strong> {{resendmessage}}\n    </div>\n  </div>\n</div>\n\n\n<!-- Account already verified alert -->\n<div *ngIf=\"resendmessage.length !== 0 && resendmessage.includes('log')\">\n  <div class=\"row justify-content-center\">\n    <div class=\"alert alert-dismissible alert-secondary\">\n      <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n      <strong>Oh snap!</strong> This account has already been verified.\n    </div>\n  </div>\n</div>\n\n<!-- resend key failed alert -->\n<div *ngIf=\"resendmessage.length !== 0 && resendmessage.includes('No')\">\n  <div class=\"row justify-content-center\">\n    <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n      <strong>Oh snap!</strong> {{resendmessage}}\n      <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  </div>\n</div>\n\n\n<!-- expired key alert -->\n\n<div *ngIf=\"isVerified === false && resendmessage.length === 0\" class=\"container\">\n  <div class=\"row justify-content-center\">\n    <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n      <strong>Oh snap!</strong> {{message}}\n      <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  </div>\n</div>\n\n<!-- Card header -->\n\n<div *ngIf=\"key.length === 64\" class=\"container\">\n  <div class=\"row justify-content-center\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <div class=\"avatar mx-auto white row justify-content-center\">\n          <img *ngIf=\"message.length === 0\"\n               src=\"../../../../../assets/img/email1.png\"\n               class=\"img-fluid h-25\" alt=\"\">\n\n          <img *ngIf=\"isVerified === false && resendmessage.length === 0\"\n               src=\"../../../../../assets/img/exipired.png\"\n               class=\"img-fluid h-25\" alt=\"\">\n\n          <img *ngIf=\"resendmessage.length !== 0\"\n               src=\"../../../../../assets/img/resend-email.png\"\n               class=\"img-fluid h-25\" alt=\"\">\n\n          <img *ngIf=\"isVerified\"\n               src=\"../../../../../assets/img/verified.png\"\n               class=\"img-fluid h-25\" alt=\"\">\n        </div>\n        <h4 *ngIf=\"message.length === 0\"\n            class=\"text-monospace font-italic font-weight-bolder row justify-content-center\">\n          Please confirm your email address\n        </h4>\n      </div>\n\n      <!-- normal card body  -->\n      <div *ngIf=\"message.length === 0\" class=\"card-body\">\n        <p class=\"card-text text-monospace font-italic font-weight-bold\">\n          Thanks for signing up to TeacherApp, We’re happy to have you.\n        </p>\n        <p class=\" text-monospace font-italic\">\n          Please take a second to make sure we have your correct email address.</p>\n\n        <div class=\"row justify-content-center\">\n          <button [disabled]=\"message.length !== 0\" (click)=\"verifyEmail()\"\n                  type=\"button\" class=\"btn btn-md btn-success\n                  text-monospace font-italic font-weight-bolder text-center\">\n            Confirm your email address\n          </button>\n        </div>\n      </div>\n\n      <!-- resend email card body -->\n      <div *ngIf=\"(isVerified === false || resendmessage.length !== 0)\n            && !resendmessage.includes('log')\"\n           class=\"card-body\">\n        <p class=\"card-text text-monospace font-italic font-weight-bold\">\n          To resend the key, enter your email address below.\n        </p>\n\n        <!-- resend email input -->\n        <label for=\"inputEmail\">\n        </label>\n        <input #emailInput=\"ngModel\"\n               pattern=\"^[aA-zZ0-9._%+-]+@[a-z0-9.-]+\\.[aA-zZ]{2,4}$\"\n               [class.is-invalid]=\"emailInput.invalid && emailInput.touched\"\n               [class.is-valid]=\"!(emailInput.invalid && emailInput.untouched)\"\n               class=\"form-control\"\n               type=\"email\" id=\"inputEmail\"\n               [(ngModel)]=\"resendEmail\" name=\"email\"\n               placeholder=\"Email address\" required>\n        <div *ngIf=\"emailInput.errors && (emailInput.invalid ||\n                        emailInput.touched)\">\n          <small id=\"emailInvalid\" class=\"text-danger\"\n                 *ngIf=\"emailInput.errors.pattern\">\n            {{emailInput.value}} is not a valid email\n          </small>\n          <small id=\"emailRequired\" class=\"text-danger\"\n                 *ngIf=\"emailInput.errors.required\n                      && emailInput.touched\">An Email is required</small>\n        </div>\n\n        <!-- end resend email input -->\n\n        <br>\n\n        <div class=\"row justify-content-center\">\n          <button [disabled]=\"emailInput.invalid || resendmessage.length !== 0\"\n                  (click)=\"resend()\" type=\"button\" class=\"btn btn-md btn-success\n                  text-monospace font-italic font-weight-bolder text-center\">\n            Resend the key\n          </button>\n        </div>\n      </div>\n\n      <!-- valid key card body -->\n      <div *ngIf=\"isVerified || resendmessage.includes('log')\" class=\"card-body\">\n        <p *ngIf=\"!resendmessage.includes('log')\"\n          class=\"card-text text-monospace font-italic font-weight-bold\">\n          Your email has been verified, you may now login...\n        </p>\n\n        <p class=\"card-text text-monospace font-italic font-weight-bold\">\n         {{resendmessage}}\n        </p>\n\n        <div class=\"row justify-content-center\">\n          <button [routerLink]=\"['/login']\"\n                  type=\"button\" class=\"btn btn-md btn-success\n                  text-monospace font-italic font-weight-bolder text-center\">\n            Login\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<!-- Invalid key -->\n\n<div *ngIf=\"key.length !== 64\" class=\"container\">\n  <div class=\"row justify-content-center\">\n    <img src=\"../../../../../assets/img/invalid-key.jpg\"\n         class=\"img-fluid\" alt=\"\">\n    <h5 class=\"text-monospace font-italic\">\n      <ngb-alert [type]=\"'danger'\" [dismissible]=\"false\">\n        <strong>Invalid key!</strong> Better check yourself, you're not looking too good.\n      </ngb-alert>\n    </h5>\n  </div>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"@app/core/services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {EToastSeverities, ToastService} from \"@app/core/services/toast.service\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: Object;\n  token: any;\n  userId: any;\n  email: string;\n  username: string;\n  password: string;\n  confirmPassword: string;\n\n  alertMessage : string  = '';\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    public toastService: ToastService) {\n  }\n\n\n  ngOnInit() {\n    this.getUserProfile();\n  }\n\n  getUserProfile() {\n    if (this.authService.getAllProfiles() === undefined) {\n      this.authService.logout();\n      this.toastService.show(EToastSeverities.INFO, 'You need to log in !');\n      this.router.navigate(['/login']);\n    } else {\n      this.authService.getProfile().subscribe(\n        (profile: any) => {\n          this.user = profile.user;\n          this.email = profile.user.email;\n          this.username = profile.user.username;\n          this.username = profile.user.username;\n          this.authService.username =\n            JSON.parse(localStorage.getItem('user')).username;\n        },\n        err => {\n          console.log(err);\n          return false;\n        }\n      );\n    }\n  }\n\n  onUpdateUser() {\n    const user = {\n      \"username\": this.username,\n      \"email\": this.email,\n      \"password\": this.password\n    };\n\n    this.authService.updateUser(this.authService.userId, user)\n      .toPromise()\n      .then((data: any) => {\n        this.getUserProfile();\n        this.alertMessage = `${data[\"message\"]} !`;\n      })\n      .catch(err => {\n        this.alertMessage = \"Something went wrong !\";\n        console.log(err);\n      });\n\n  }\n\n  closeAlert() {\n    this.alertMessage = \"\";\n  }\n}\n\n","<div *ngIf=\"user\" style=\"width:200px; margin:0 auto;\">\n  <!--Grid column-->\n  <div class=\"col-lg-4 col-md-6 mb-md-0 mb-4\">\n    <!--Card-->\n    <div class=\"card testimonial-card\"\n         style=\"width:400px; margin-left:-110px; margin-top: 18px\">\n      <!--Background color-->\n      <div class=\"card-up blue-gradient\">\n      </div>\n      <!--Avatar-->\n      <div class=\"avatar mx-auto white\" style=\"margin-top: 8px\">\n        <img src=\"../../../../assets/img/{{user['username']}}.jpg\" class=\"rounded-circle img-fluid\" alt=\"\"\n        style=\"height: 150px\" onerror='this.src = \"../../../../assets/img/no-profile.png\"'>\n\n      </div>\n      <div class=\"card-body\">\n        <!--Name-->\n        <h4 class=\"font-weight-bold mb-4\">{{user[\"username\"]}}\n          <i *ngIf=\"user['isVerified']\" class=\"fa fa-check-circle\"\n             style=\"color: dodgerblue\" title=\"Verified Account\"></i>\n          <i *ngIf=\"!user['isVerified']\" class=\"fa fa-times-circle\"\n             style=\"color: indianred\" title=\"Unverified Account\"></i>\n        </h4>\n        <hr>\n        <!--Quotation-->\n        <p class=\"dark-grey-text mt-4\"><i class=\"fa fa-quote-left pr-2\"></i>\n\n          <strong style=\"margin-right: 36px\">Id : </strong> {{user[\"userId\"]}}\n          <br>\n          <strong style=\"margin-right: 34px\"> Email : </strong> {{user[\"email\"]}}\n          <br>\n          <strong> Username : </strong> {{user[\"username\"]}}\n          <br>\n          <strong style=\"margin-right: 37px\"> Level : </strong> {{user[\"level\"]}}\n          <br>\n          <strong style=\"margin-right: 44px\"> Role : </strong> {{user[\"role\"]}}\n          <i style=\"margin-left: 140px\" class=\"fa fa-quote-right pr-2\"></i>\n        </p>\n      </div>\n    </div>\n    <!--Card-->\n    <br>\n  </div>\n  <button type=\"button\" class=\"btn btn-info text-monospace font-italic font-weight-bolder\"\n          data-toggle=\"modal\" data-target=\"#exampleModal\" id=\"updateUser\"\n          style=\"width:130px; margin-left:40px;\">Update\n  </button>\n  <br>\n  <br>\n</div>\n\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n     aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title font-weight-bold text-monospace font-italic\"\n            id=\"exampleModalLabel\">Update your profile</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form #profileForm=\"ngForm\" (submit)=\"onUpdateUser()\">\n\n          <!-- Username -->\n          <div class=\"form-group\">\n            <label for=\"username\" class=\"col-form-label\"></label>\n            <input #usernameInput=\"ngModel\"\n                   [class.is-invalid]=\"usernameInput.invalid && usernameInput.touched\"\n                   [class.is-valid]=\"!(usernameInput.invalid && usernameInput.untouched)\"\n                   class=\"form-control\" type=\"text\" id=\"username\" minlength=\"4\" maxlength=\"9\"\n                   [(ngModel)]=\"username\" name=\"username\" value=\"{{username}}\"\n                   placeholder=\"Username\" required>\n\n            <div *ngIf=\"usernameInput.errors && (usernameInput.invalid ||\n                        usernameInput.touched)\">\n              <small id=\"usernameError1\" class=\"text-danger\"\n                     *ngIf=\"usernameInput.errors.minlength\">\n                {{usernameInput.value}} username minimum length is 4\n              </small>\n              <small id=\"usernameError2\" class=\"text-danger\"\n                     *ngIf=\"usernameInput.errors.required\n                      && usernameInput.touched\">A username is required\n              </small>\n            </div>\n          </div>\n\n          <!-- Email address -->\n          <div class=\"form-group\">\n            <label for=\"inputEmail\">\n            </label>\n            <input #emailInput=\"ngModel\"\n                   pattern=\"^[aA-zZ0-9._%+-]+@[a-z0-9.-]+\\.[aA-zZ]{2,4}$\"\n                   [class.is-invalid]=\"emailInput.invalid && emailInput.touched\"\n                   [class.is-valid]=\"!(emailInput.invalid && emailInput.untouched)\"\n                   class=\"form-control\" type=\"email\" id=\"inputEmail\"\n                   [(ngModel)]=\"email\" name=\"email\"\n                   placeholder=\"Email address\" required>\n          </div>\n          <div *ngIf=\"emailInput.errors && (emailInput.invalid ||\n                        emailInput.touched)\">\n            <small class=\"text-danger\" *ngIf=\"emailInput.errors.pattern\">\n              {{emailInput.value}} is not a valid email</small>\n            <small id=\"emailRequired\" class=\"text-danger\" *ngIf=\"emailInput.errors.required\n                      && emailInput.touched\">An Email is required</small>\n          </div>\n\n          <!-- Password -->\n          <div class=\"form-group\">\n            <label for=\"inputPassword\" class=\"col-form-label\"></label>\n            <input #passwordInput=\"ngModel\"\n                   [class.is-invalid]=\"passwordInput.invalid && passwordInput.touched\"\n                   [class.is-valid]=\"!(passwordInput.invalid && passwordInput.untouched)\"\n                   class=\"form-control\" type=\"password\" id=\"inputPassword\"\n                   [(ngModel)]=\"password\" name=\"password\"\n                   placeholder=\"Password\" required>\n            <small id=\"passwordRequired\" class=\"text-danger\" [class.d-none]=\"passwordInput.valid ||\n            passwordInput.untouched\">A password is required</small>\n          </div>\n\n          <!-- Confirm Password  -->\n          <div class=\"form-group\">\n            <label for=\"passwordConfirm\" class=\"col-form-label\"></label>\n            <input #inputConfirmPassword=\"ngModel\" pattern=\"{{passwordInput.value}}\"\n                   [class.is-invalid]=\"inputConfirmPassword.invalid &&\n                   inputConfirmPassword.touched\"\n                   [class.is-valid]=\"!(inputConfirmPassword.invalid &&\n                   inputConfirmPassword.untouched)\"\n                   class=\"form-control\" type=\"password\" id=\"passwordConfirm\"\n                   [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\"\n                   placeholder=\"Confirm password\" required>\n\n            <div *ngIf=\"inputConfirmPassword.errors && (inputConfirmPassword.invalid ||\n                        inputConfirmPassword.touched)\">\n              <small id=\"passwordMatchError\" class=\"text-danger\"\n                     *ngIf=\"inputConfirmPassword.errors.pattern\">Passwords do not match</small>\n              <small id=\"confirmPasswordError\" class=\"text-danger\" *ngIf=\"inputConfirmPassword.errors.required\n                      && inputConfirmPassword.touched\">Please confirm your password</small>\n            </div>\n          </div>\n\n          <!-- Modal footer -->\n          <div class=\"modal-footer\">\n             <span *ngIf=\"alertMessage.length > 1 && !(alertMessage.includes('wrong'))\"\n                   style=\"color: green; margin-right: 30px\" id=\"updateSuccess\">\n            {{alertMessage}}\n          </span>\n            <span *ngIf=\"alertMessage.includes('wrong')\"\n                  style=\"color: red; margin-right: 30px\" id=\"updateFail\">{{alertMessage}}\n          </span>\n            <button (click)=\"closeAlert()\" type=\"button\"\n                    class=\"btn btn-secondary text-monospace font-italic font-weight-bolder\"\n                    data-dismiss=\"modal\" id=\"modalClose\">Close\n            </button>\n\n            <button appAddClass type=\"submit\" id=\"submitUpdate\"\n                    class=\"btn btn-primary text-monospace font-italic font-weight-bolder\"\n                    [disabled]=\"profileForm.form.invalid\">Submit</button>\n\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"!user\">\n  <div class=\"sk-fading-circle\">\n    <div class=\"sk-circle1 sk-circle\"></div>\n    <div class=\"sk-circle2 sk-circle\"></div>\n    <div class=\"sk-circle3 sk-circle\"></div>\n    <div class=\"sk-circle4 sk-circle\"></div>\n    <div class=\"sk-circle5 sk-circle\"></div>\n    <div class=\"sk-circle6 sk-circle\"></div>\n    <div class=\"sk-circle7 sk-circle\"></div>\n    <div class=\"sk-circle8 sk-circle\"></div>\n    <div class=\"sk-circle9 sk-circle\"></div>\n    <div class=\"sk-circle10 sk-circle\"></div>\n    <div class=\"sk-circle11 sk-circle\"></div>\n    <div class=\"sk-circle12 sk-circle\"></div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"@app/core/services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {ValidateService} from \"@app/core/services/validate.service\";\nimport {JwtHelperService} from \"@auth0/angular-jwt\";\nimport {EToastSeverities, ToastService} from \"@app/core/services/toast.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  pseudo: String;\n  password: String;\n  timeLoggedIn: number;\n  isVerified: boolean;\n\n  constructor(private validateService: ValidateService,\n              public toastService: ToastService,\n              private authService: AuthService,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      pseudo: this.pseudo,\n      password: this.password\n    };\n\n    if (!this.validateService.validateLogin(user)) {\n\n      this.toastService.show(EToastSeverities.WARN, 'Please fill in all fields !');\n\n      return false;\n    }\n\n    this.authService.loginUser(JSON.stringify(user))\n      .subscribe(\n        async (data: any) => {\n          this.timeLoggedIn = new Date().getTime();\n          this.sessionExpired(data.token);\n          this.authService.storeUserData(data);\n          this.authService.role = data.user.role;\n          this.authService.username = data.user.username;\n          this.authService.userId = data.user.userId;\n          this.authService.userEmail = data.user.userEmail;\n          this.toastService.show(EToastSeverities.INFO, 'Welcome back !');\n          setTimeout(async () => await this.router.navigate(['/questions']), 1000);\n        },\n        err => {\n          console.log(err)\n          this.isVerified = err.error?.isVerified;\n          if (Object.keys(err?.error).includes(\"isVerified\")) {\n            this.toastService.show(EToastSeverities.ERROR, `${err.error.message}`);\n          } else {\n            this.toastService.show(EToastSeverities.ERROR, 'Incorrect credentials !');\n          }\n        });\n\n\n  }\n\n  sessionExpired(token: string) {\n    const expirationDate = new JwtHelperService()\n      .getTokenExpirationDate(token).getTime();\n    const sessionExpired = expirationDate - this.timeLoggedIn;\n    setTimeout(() => {\n      this.authService.logout();\n      this.toastService.show(EToastSeverities.WARN, 'Your session is over, you can log in back in to start a new session.');\n    }, sessionExpired);\n  }\n\n\n  isAdmins() {\n    return this.authService.role === 'admin';\n  }\n\n}\n","<p-toast></p-toast>\n\n<br>\n<div class=\"container register-form col-lg-7 col-md-8 col-sm-8 rounded\">\n\n  <div class=\"form rounded col-12\">\n\n    <div class=\"note bg-dark\">\n      <h3 id=\"formTitle\"\n          class=\"font-weight-bolder mb-3\">\n        {{ 'LOGIN.TITLE' | translate }}</h3>\n      <p class=\"font-weight-bold\">\n        {{ 'LOGIN.SUBTITLE' | translate }}\n      </p>\n    </div>\n\n    <form #signUpForm=\"ngForm\"\n          class=\"form-content text-center col-md-12 rounded my-form\"\n          (submit)=\"onLoginSubmit()\">\n\n      <!-- Username -->\n      <div class=\"row justify-content-center col-12\">\n        <label for=\"pseudo\">\n        </label>\n        <input #pseudoInput=\"ngModel\"\n               [class.is-invalid]=\"pseudoInput.invalid && pseudoInput.touched\"\n               [class.is-valid]=\"!(pseudoInput.invalid && pseudoInput.untouched)\"\n               class=\"form-control \" type=\"text\" id=\"pseudo\"\n               [(ngModel)]=\"pseudo\" name=\"pseudo\"\n               placeholder=\"Email address or Username\" required>\n        <small id=\"emailError\" class=\"text-danger\" [class.d-none]=\"pseudoInput.valid ||\n          pseudoInput.untouched\">An Email or a username is required</small>\n      </div>\n      <br>\n\n      <!-- password -->\n      <div class=\"row justify-content-center col-12\">\n        <label for=\"password\"></label>\n        <label for=\"password\"></label>\n        <input #passwordInput=\"ngModel\"\n               [class.is-invalid]=\"passwordInput.invalid && passwordInput.touched\"\n               [class.is-valid]=\"!(passwordInput.invalid && passwordInput.untouched)\"\n               class=\"form-control\" type=\"password\" id=\"password\"\n               [(ngModel)]=\"password\" name=\"password\"\n               placeholder=\"Password\" required>\n        <small id=\"passwordError\" class=\"text-danger\" [class.d-none]=\"passwordInput.valid ||\n          passwordInput.untouched\">A password is required</small>\n      </div>\n      <br>\n\n      <div class=\"d-flex\">\n        <div>\n          <button [disabled]=\"signUpForm.form.invalid\"\n                  class=\"btn btn-secondary btn-rounded\n                  text-monospace font-italic font-weight-bolder\"\n                  id=\"submitBtn\" type=\"submit\">{{ 'LOGIN.SIGNIN_BTN' | translate }}\n          </button>\n        </div>\n        <div class=\"ml-auto\">\n          <small class=\"\">\n            <a class=\"nav-link font-italic\" id=\"signUpLink\"\n               style=\"text-decoration: underline; color: #343A40\"\n               [routerLink]=\"['/register']\">{{ 'LOGIN.SIGNUP_URL' | translate }}</a>\n          </small>\n        </div>\n      </div>\n    </form>\n\n  </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {SharedModule} from \"../shared/shared.module\";\nimport {ReviewsComponent} from \"./components/reviews/reviews.component\";\nimport {LoginComponent} from './components/login/login.component';\nimport {RegisterComponent} from './components/register/register.component';\nimport {ProfileComponent} from './components/profile/profile.component';\nimport {QuestionsComponent} from './components/questions/questions.component';\nimport {ResultsComponent} from './components/questions/results/results.component';\nimport { VerifyEmailComponent } from './components/register/verify-email/verify-email.component';\nimport {ReplacePipe} from \"@app/shared/pipes/replace.pipe\";\nimport { AppointmentComponent } from './components/appointment/appointment.component';\n\n\nconst appRoutes: Routes = [\n  {path: \"register\", pathMatch: 'full', component: RegisterComponent},\n  {path: \"verify-email/:key\", component: VerifyEmailComponent},\n  {path: \"login\", pathMatch: 'full', component: LoginComponent},\n  {path: \"booking\", component: AppointmentComponent},\n  {path: \"questions\", component: QuestionsComponent},\n  {path: \"results\", component: ResultsComponent},\n  {path: \"reviews\", component: ReviewsComponent},\n  {path: \"profile/:id\", component: ProfileComponent}\n];\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    QuestionsComponent,\n    ResultsComponent,\n    ReviewsComponent,\n    VerifyEmailComponent,\n    AppointmentComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(appRoutes),\n  ],\n  exports: [RouterModule],\n  providers: [\n    ReplacePipe\n  ],\n})\nexport class FeaturesModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"@app/core/services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {QuestionsService} from \"@app/core/services/questions.service\";\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css']\n})\nexport class ResultsComponent implements OnInit {\n\n  description: any;\n\n  constructor(\n    public authService: AuthService,\n    private router: Router,\n    public questions: QuestionsService\n  ) {\n  }\n\n  ngOnInit() {\n\n\n    const userScore = {\n      \"score\": this.questions.correctAnswerCount\n    };\n    this.authService.updateScore(userScore)\n      .toPromise()\n      .then()\n      .catch(err => {\n        console.log(err);\n      });\n    this.getLevel();\n  }\n\n  getLevel() {\n    this.authService.getProfile()\n      .toPromise()\n      .then((data: any) => {\n        this.description = this.questions.getLevelDescription(data.user.level);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n}\n","<div *ngIf=\" questions.qns && description\">\n\n  <!-- completed text -->\n<h2 class=\"header mb-4 font-weight-bold\"\n    style=\"margin-left: 24px\">Completed!</h2>\n\n  <!-- user results and level description -->\n<div class=\"card container\" >\n  <div class=\"card-body\">\n    <div class=\"row\" style=\"margin : 10px\">\n      <div class=\"col-lg-3\" style=\"margin-right: 20px\">\n        <div class=\"\">\n          <img src=\"../../../../../assets/img/trophy.png\" style=\"width: 250px; height: 250px;\" alt=\"\">\n        </div>\n      </div>\n      <div class=\"col-lg-4\">\n        <div>\n          <br>\n\n          <!-- username -->\n          <h4 class=\"text-monospace font-italic font-weight-bolder\">{{authService.username}}</h4>\n\n          <!-- user score -->\n          <h4 class=\"text-monospace font-italic font-weight-bolder\">\n            Your score is : {{questions.correctAnswerCount}}/10\n          </h4>\n\n          <!-- user level -->\n          <h4 class=\"text-monospace font-italic font-weight-bolder\">\n            Your is level is : {{description[\"Level\"]}}\n          </h4>\n\n          <!-- user time taken -->\n          <span class=\"blockquote-footer text-monospace font-italic font-weight-bolder\"\n                style=\"font-size: medium\">\n            Time Elapsed : {{questions.timeTaken}}</span>\n        </div>\n\n        <!-- restart button card -->\n        <div class=\"card-action\">\n          <hr>\n          <button [routerLink]=\"['/booking']\"\n                  class=\"btn btn-outline-success my-2 my-sm-0\" type=\"button\"\n                  style=\"width:150px; margin-left:40px;\">\n            <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n            Take an appointment\n          </button>\n        </div>\n      </div>\n\n      <!-- user level description -->\n      <div class=\"col-lg-4\">\n        <div>\n          <br>\n          <h4>{{description[\"Title\"]}}</h4>\n          <p>\n            {{description[\"Subtitle\"]}}\n          </p>\n          <ol>\n            <li>\n              {{description[\"1\"]}}\n            </li>\n            <li>\n              {{description[\"2\"]}}\n            </li>\n            <li>\n              {{description[\"3\"]}}\n            </li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<br>\n\n  <!-- loop through all questions answers -->\n  <ng-container *ngFor=\"let qn of questions.qns;let i=index\">\n    <div class=\"card\" style=\"background-color: #31373e; margin-left: 120px; margin-right: 120px\">\n\n      <!-- question number and title -->\n      <div class=\"card-content\">\n        <p class=\"card-title text-monospace font-italic font-weight-bolder\"\n           style=\"color: white; margin: 20px\">Question {{(i + 1)}} :</p>\n        <h5>\n          <p style=\"color: white; margin: 20px\">\n            <strong>{{qn.question}}</strong>\n          </p>\n        </h5>\n      </div>\n\n      <!-- question answers card -->\n      <div class=\"card\" style=\"margin: 10px;\">\n        <p class=\"list-group list-group-flush\">\n\n          <!-- loop through all answers -->\n          <ng-container *ngFor=\"let option of qn['answers'];let j = index\">\n\n            <!-- a tag for non fill in question -->\n            <a *ngIf=\"qn.type !== 'fill in'\"\n              class=\"list-group-item list-group-item-action\">\n              {{option.option}}\n              <span *ngIf=\"(option['isCorrect']) === 'true'\">\n                 <i class=\"fa fa-check-circle right-align\"\n                    style=\"color: green; position: absolute; right: 150px\"> correct answer</i>\n              </span>\n              <span *ngIf=\"(qn['index']) === j && (option['isCorrect']) === 'false'\">\n                 <i class=\"fa fa-times-circle right-align\"\n                    style=\"color: red; position: absolute; right: 135px\"> incorrect answer</i>\n              </span>\n            </a>\n\n            <!-- a tag for fill in question -->\n            <a *ngIf=\"qn.type === 'fill in'\"\n                class=\"list-group-item list-group-item-action\">\n              ({{j+1}}) {{option.option}}\n              <span *ngIf=\"(option['isCorrect']) === 'true'\">\n                 <i class=\"fa fa-check-circle right-align\"\n                    style=\"color: green; position: absolute; right: 150px\"> correct answer</i>\n              </span>\n            </a>\n            <a *ngIf=\"qn.type === 'fill in' && option.option !== qn['fill'][j]\"\n               class=\"list-group-item list-group-item-action\"\n            style=\"color: red\">\n              ({{j+1}}) {{qn['fill'][j]}}\n              <span *ngIf=\"option.option !== qn['fill'][j]\">\n                 <i class=\"fa fa-times-circle right-align\"\n                    style=\"color: red; position: absolute; right: 135px\">\n                    incorrect answer</i>\n              </span>\n            </a>\n          </ng-container>\n        </p>\n      </div>\n    </div>\n    <br>\n  </ng-container>\n</div>\n\n<div *ngIf=\"!questions.qns\"\n     style=\"margin-bottom: 302px; margin-left: 20px; text-align: center; margin-top: 50px\">\n  <i class=\"fa fa-exclamation-triangle fa-4x\" style=\"color: red\"></i>\n  <h3>You need to finish the QCM</h3>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"@app/core/services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {FormBuilder, FormGroup, FormArray, Validators} from '@angular/forms';\nimport {QuestionsService} from \"@app/core/services/questions.service\";\nimport {ReplacePipe} from \"@app/shared/pipes/replace.pipe\";\nimport {EToastSeverities, ToastService} from \"@app/core/services/toast.service\";\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css']\n})\n\nexport class QuestionsComponent implements OnInit {\n\n  option: any;\n  progress: number = 0;\n  compArray: boolean;\n  dynamicInputsForm: FormGroup;\n  tab: Array<number> = [];\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    public toastService: ToastService,\n    public question: QuestionsService,\n    private replacePipe: ReplacePipe,\n    private formBuilder: FormBuilder\n  ) {\n  }\n\n  ngOnInit() {\n\n    this.dynamicInputsForm = this.formBuilder.group({\n      inputs: new FormArray([])\n    });\n\n    this.question.qnProgress = 0;\n    this.question.seconds = 0;\n    this.showQuestion();\n    this.startTimer();\n\n    if (!Object.keys(localStorage).includes('id_token')) {\n      this.toastService.show(EToastSeverities.INFO, 'Redirected to login page !');\n      this.router.navigate(['/login']);\n    }\n  }\n\n  showQuestion() {\n    this.question.getQuestions()\n      .toPromise()\n      .then((data: any) => {\n\n        data.filter(x => x.type === 'fill in')\n          .forEach(x => {\n            x.regexAnswer = this.question.getAnswer(x.question);\n            x.question = this.replacePipe.transform(x.question);\n            this.tab.push(x.regexAnswer.length);\n          });\n\n        data.forEach((x, i) => {\n          x.questionNumber = ++i;\n        });\n\n        this.question.qns = data;\n        this.question.correctAnswerCount = 0;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  get getDynamicInputsForm() {\n    return this.dynamicInputsForm.controls;\n  }\n\n  get getInputs() {\n    return this.getDynamicInputsForm.inputs as FormArray;\n  }\n\n  onChangeTickets() {\n    const numberOfInputs = this.tab[this.progress] || 0;\n    if (this.getInputs.length < numberOfInputs) {\n      for (let i = this.getInputs.length; i < numberOfInputs; i++) {\n        this.getInputs.push(this.formBuilder.group({\n          name: ['', Validators.required]\n        }));\n      }\n\n    } else {\n      for (let i = this.getInputs.length; i >= numberOfInputs; i--) {\n        this.getInputs.removeAt(i);\n      }\n    }\n  }\n\n  async test() {\n\n    let t: Array<string> = [];\n    let t1: Array<string> = [];\n\n    Object.keys(this.dynamicInputsForm.value)\n      .forEach(x => (this.dynamicInputsForm.value[x])\n        .forEach(y => t.push((y.name).toLocaleLowerCase())));\n\n    this.question.qns[this.question.qnProgress].fill = t;\n\n    this.question.qns[this.question.qnProgress].answers\n      .forEach(x => t1.push(x.option));\n\n    (this.compareTwoArray(t, t1)) ? this.question.correctAnswerCount++ : undefined;\n\n    this.question.qnProgress++;\n    this.progress++;\n\n    if (this.question.qnProgress == (this.question.qns).length) {\n      this.question.timeTaken = this.question.displayTimeElapsed();\n      clearInterval(this.question.timer);\n      await this.router.navigate(['/results']);\n    }\n  }\n\n  test1() {\n    this.question.qnProgress--;\n    this.progress--;\n  }\n\n  private compareTwoArray(t1: Array<string>, t2: Array<string>): boolean {\n    let tab: Array<string> = t1.filter(x => t2.includes(x));\n    return tab.length === t1.length;\n  }\n\n  startTimer() {\n    this.question.timer = setInterval(() => {\n      this.question.seconds++;\n      localStorage.setItem('seconds', this.question.seconds.toString());\n    }, 1000);\n  }\n\n  async answer(index, choice) {\n    this.question.qns[this.question.qnProgress].answer = choice;\n    this.question.qns[this.question.qnProgress].index = index;\n\n    if (JSON.parse(this.question.qns[this.question.qnProgress].answer\n      || this.compArray)) {\n      this.question.correctAnswerCount++;\n    }\n\n    /**\n     * if (JSON.parse(choice.toLowerCase())) {\n      this._flashMessagesService.show(\"correct answer\", {\n        cssClass: \"alert-success w-25 text-center\",\n        timeout: 2000\n      });\n    } else {\n      this._flashMessagesService.show(\"wrong answer\", {\n        cssClass: \"alert-danger w-25 text-center\",\n        timeout: 2000,\n      });\n    }\n     await new Promise(r => setTimeout(r, 2000));\n     */\n\n    this.question.qnProgress++;\n    if (this.question.qnProgress == (this.question.qns).length) {\n      this.question.timeTaken = this.question.displayTimeElapsed();\n      clearInterval(this.question.timer);\n      await this.router.navigate(['/results']);\n    }\n  }\n}\n","<div *ngIf=\"question.qns\">\n  <div class=\"col s6\">\n\n    <!-- Time elapsed -->\n    <div class=\"container\" style=\"width: 16rem;\">\n      <div class=\"row justify-content-center\">\n        <div class=\"card \">\n          <div class=\"card-body\">\n              <span class=\"text-monospace font-italic font-weight-bolder\"\n                style=\"color: green; text-align: center\">\n                <i class=\"fa fa-clock-o\" aria-hidden=\"true\" style=\"color: #0c1722\"></i>\n                  Time Elapsed : {{question.displayTimeElapsed()}}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Questions progress bar title -->\n    <div class=\"col-9 mx-auto\">\n      <div class=\"d-flex justify-content-between\">\n        <div>\n          <h5 class=\"text-monospace font-italic font-weight-bolder\">Question Progress</h5>\n        </div>\n        <div>\n          <h5 class=\"text-monospace font-italic font-weight-bolder\">\n            {{question.qnProgress + 1}}/{{(question.qns).length}}\n          </h5>\n        </div>\n      </div>\n    </div>\n\n    <!-- Questions progress bar -->\n    <div class=\"progress col-9 mx-auto\">\n      <div class=\"progress-bar progress-bar-success progress-bar-striped active\"\n           [ngStyle]=\"{'width.%':(question.qnProgress)*10}\" >\n        {{(question.qnProgress) * 10}}%\n      </div>\n    </div>\n    <br>\n\n    <!-- Question card -->\n    <div class=\"col-10 justify-content-center mx-auto\">\n      <div class=\"card\" style=\"background-color: #31373e\">\n\n        <!-- Question title -->\n        <div class=\"card-content\">\n          <p class=\"card-title ml-3 mt-4 text-monospace font-italic font-weight-bolder\"\n             style=\"color: white\">Question\n            {{(question.qnProgress + 1)}} :</p>\n          <h5>\n            <p class=\"ml-3\" style=\"color: white\">\n              <strong>{{question.qns[question.qnProgress].question}}</strong>\n            </p>\n          </h5>\n        </div>\n\n        <!-- Questions of type fill in -->\n        <div *ngIf=\"question.qns[question.qnProgress].type === 'fill in'\"\n             class=\"card ml-3 mb-3 mr-3\" style=\"margin: 10px;\"> {{onChangeTickets()}}\n          <p class=\"list-group list-group-flush\">\n\n            <!-- Loop through all questions of type fill in -->\n            <ng-container *ngFor=\"let group of getInputs.controls; let i = index\">\n\n              <!-- inputs groups for questions of type fill in -->\n              <div [formGroup]=\"group\" class=\"list-group-item list-group-item-action\">\n\n                <!-- inputs number for questions of type fill in -->\n                <label for=\"{{i}}\">({{i + 1 }})</label>\n\n                <!-- inputs for questions of type fill in -->\n                <input type=\"text\" id=\"{{i}}\" formControlName=\"name\"\n                       class=\"form-control\"\n                       [class.is-invalid]=\"group['controls'].name.invalid &&\n                         group['controls'].name.touched\"\n                       [class.is-valid]=\"!(group['controls'].name.invalid &&\n                         group['controls'].name['untouched'])\">\n\n                <!-- input error message for questions of type fill in -->\n                <small class=\"text-danger\" style=\"float: left\"\n                       [class.d-none]=\"group['controls'].name.valid ||\n                     group['controls'].name['untouched']\">\n                  <i style=\"color: red\" class=\"fa fa-exclamation-circle\"\n                     aria-hidden=\"true\"></i>\n                    An answer required here\n                </small>\n              </div>\n            </ng-container>\n          </p>\n\n          <br>\n\n          <!-- Next button for questions of type fill in -->\n          <div class=\"btn-toolbar row mx-auto\" role=\"toolbar\"\n               aria-label=\"Toolbar with button groups\">\n            <div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\n              <button (click)=\"test1()\" type=\"button\"\n                      class=\"btn btn-outline-success\">prev\n              </button>\n            </div>\n            <div class=\"btn-group mr-2\" role=\"group\" aria-label=\"Second group\">\n              <button (click)=\"test()\" type=\"button\" class=\"btn btn-outline-info\"\n                      [disabled]=\"getInputs.invalid\">next\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Questions of type multiple or boolean -->\n        <div *ngIf=\"question.qns[question.qnProgress].type !== 'fill in'\"\n             class=\"card\" style=\"margin: 10px;\">\n          <a class=\"list-group list-group-flush\">\n\n            <!-- Loop through all questions of multiple or boolean -->\n            <ng-container\n              *ngFor=\"let option of question.qns[question.qnProgress]['answers'];\n              let i = index\">\n\n              <!-- Style of possible answers -->\n              <a *ngIf=\"option != null \"\n                 class=\"list-group-item list-group-item-action\"\n                 onmousemove=\"this.style.backgroundColor = 'rgba(0, 255, 0, 0.3)';\n                      this.style.color='green'; this.style.fontSize= '1.8vh';\"\n                 onmouseout=\"this.style.backgroundColor = ''; this.style.color='';\n                  this.style.fontSize= '';\"\n                 style=\"cursor:pointer; \"\n                 (click)=\"answer(i,\n                option['isCorrect'])\">\n                {{option.option}}\n              </a>\n            </ng-container>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<br>\n<br>\n\n\n\n"],"sourceRoot":"webpack:///"}