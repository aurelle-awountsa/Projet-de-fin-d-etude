# Group Questions
This the question entity.

## Question List [/questions]
Each question has these 3 properties :

+ type
+ question
+ answers

```no-highlight
A JWT needs to be send in the request header to get all questions
```

### Get Questions [GET]

Get a list of questions.

::: note
#### <i class="fa fa-info-circle"></i> Info
To acces this route a JWT needs to be sent in `the request header` and if the token is invalid or
has `expired`, a 401 status is sent back from the server.
:::

+ Request

  + Headers

            Authorization: JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRhbjMwQGdtYWlsLmNvbSIsInVzZXJJZCI6IjVlNzgxZmQyZTUwNDY0MzUwY2FlYTBiMSIsImlhdCI6MTU4NTE4MjM1MiwiZXhwIjoxNTg1MTg1OTUyfQ.c9VX-i_v5D2Q8VqHIphJjpQ4R5d46UmR6uKeADsnoPg

+ Response 200 (application/json)

    + Body

            <!-- include(get-all-questions-rep.json) -->

+ Response 204

+ Response 401 (application/json)

    + Body

              "Unauthorized"

+ Response 500 (application/json)

    + Body

            {
                "error ": "An error occured while trying to get data from the database"
            }

### Create New Question [POST]

::: note
#### <i class="fa fa-info-circle"></i> Info
To acces this route a JWT needs to be sent in `the request header` and if the token is invalid or
has `expired`, a 401 status is sent back from the server.
:::

You may create your own question using this action. It takes a JSON
object containing a question and a list of answers in the
form of choices and correct answer.

Create a new question using a question and it's answers content body.

> A body is required in the request sent to create a question

+ Request with a body (application/json)

  + Headers

            Authorization: JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRhbjMwQGdtYWlsLmNvbSIsInVzZXJJZCI6IjVlNzgxZmQyZTUwNDY0MzUwY2FlYTBiMSIsImlhdCI6MTU4NTE4MjM1MiwiZXhwIjoxNTg1MTg1OTUyfQ.c9VX-i_v5D2Q8VqHIphJjpQ4R5d46UmR6uKeADsnoPg

  + Body

           <!-- include(post-questions-body.json) -->
            
+ Response 201

    + Body


            {
                "message": "Created question successfully"
            }

+ Response 401 (application/json)

    + Body

              "Unauthorized"

+ Response 405 (application/json)

    + Body

            {
                message : "Invalid input"
            }

+ Response 500 (application/json)

    + Body

            {
                message : "Server error"
            }
            

## Question [/questions/{questionId}]

Question description

+ Parameters

    + questionId: `5e6444e51167df04c81f43e4` (required, string) - The question ID

### Get Question [GET]

Get a single question.

::: note
#### <i class="fa fa-info-circle"></i> Info
To acces this route a JWT needs to be sent in `the request header` and if the token is invalid or
has `expired`, a 401 status is sent back from the server.
:::

+ Parameters

    + questionId: `5e6444e51167df04c81f43e4` (string)

+ Request

  + Headers

            Authorization: JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRhbjMwQGdtYWlsLmNvbSIsInVzZXJJZCI6IjVlNzgxZmQyZTUwNDY0MzUwY2FlYTBiMSIsImlhdCI6MTU4NTE4MjM1MiwiZXhwIjoxNTg1MTg1OTUyfQ.c9VX-i_v5D2Q8VqHIphJjpQ4R5d46UmR6uKeADsnoPg

+ Response 200 (application/json)

   + Body

            <!-- include(get-one-question.json) -->

+ Response 401 (application/json)

    + Body

              "Unauthorized"

+ Response 404 (application/json)

    + Body

            {
                message: "No valid entry found for provided ID"
            }
+ Response 500 (application/json)

    + Body

            {
                message : "Server error"
            }


### Update a Question [PATCH]

Update a single question by setting the question value in the body request.

::: warning
#### <i class="fa fa-warning"></i> Caution
If the value for `the request body` is `null` or `undefined`, then the corresponding
value is not modified on the server. However, if you send an empty string instead then
it will **permanently overwrite** the original value.
:::

+ Request with a body (application/json)

  + Headers

            Authorization: JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRhbjMwQGdtYWlsLmNvbSIsInVzZXJJZCI6IjVlNzgxZmQyZTUwNDY0MzUwY2FlYTBiMSIsImlhdCI6MTU4NTE4MjM1MiwiZXhwIjoxNTg1MTg1OTUyfQ.c9VX-i_v5D2Q8VqHIphJjpQ4R5d46UmR6uKeADsnoPg

  + Body

            <!-- include(post-questions-body.json) -->

+ Response 200 (application/json)

    + Body

            {
                "message": "Question updated",
                "modifiedDocs": result.nModified,
                "request": {
                    "type": "GET",
                    "url": `http://localhost:5000/api/questions/${questionId}`
                }
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Please read the API doc to see how to update a question"
            }

+ Response 401 (application/json)

    + Body

              "Unauthorized"

+ Response 404 (application/json)

    + Body

            {
                "message": "No valid entry found for provided ID"
            }

+ Response 500 (application/json)

    + Body

            {
                "message": "Server error"
            }

### Delete a Question [DELETE]
Delete a single note

::: note
#### <i class="fa fa-info-circle"></i> Info
To acces this route a JWT needs to be sent in `the request header` and if the token is invalid or
has `expired`, a 401 status is sent back from the server.
:::

+ Request

  + Headers

            Authorization: JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRhbjMwQGdtYWlsLmNvbSIsInVzZXJJZCI6IjVlNzgxZmQyZTUwNDY0MzUwY2FlYTBiMSIsImlhdCI6MTU4NTE4MjM1MiwiZXhwIjoxNTg1MTg1OTUyfQ.c9VX-i_v5D2Q8VqHIphJjpQ4R5d46UmR6uKeADsnoPg

+ Response 200 (application/json)

    + Body

            {
                message: "Question deleted successfully"
            }

+ Response 401 (application/json)

    + Body

              "Unauthorized"

+ Response 404 (application/json)

    + Body

            {
                message: "No valid entry found for provided ID"
            }

+ Response 500 (application/json)

    + Body

            {
                "message": "Server error"
            }
